{% extends 'base.html.twig' %}

{% block title %}Profil - {{ player.username }}{% endblock %}

{% block body %}
<div class="profile-container">
    <a href="{{ path('app_homepage') }}" class="back-button">
        <i class="fas fa-arrow-left"></i>
        Retour au jeu
    </a>

    <div class="profile-header">
        <div class="profile-avatar">
            <i class="fas fa-{{ app.user.preferredIcon ?? 'user' }}"></i>
        </div>
        <div class="profile-info">
            <h1 style="color: {{ app.user.usernameColor ?? '#ffffff' }}">{{ player.username }}</h1>
            <p class="profile-subtitle">Membre depuis {{ player.createdAt|date('F Y') }}</p>
            <div class="rank-badge">
                Rang #{{ player_rank.position }} (Top {{ player_rank.percentile }}%)
            </div>
        </div>
    </div>

    <div class="profile-grid">
        <!-- Statistiques -->
        <div class="profile-card">
            <h3><i class="fas fa-chart-bar"></i> Statistiques</h3>
            <div class="stats-grid">
                <div class="stat-item">
                    <span class="stat-value">{{ stats.current_mmr }}</span>
                    <div class="stat-label">MMR</div>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{{ stats.total_matches }}</span>
                    <div class="stat-label">Matchs joués</div>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{{ stats.wins }}</span>
                    <div class="stat-label">Victoires</div>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{{ stats.win_rate }}%</span>
                    <div class="stat-label">Taux de victoire</div>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{{ stats.average_power }}</span>
                    <div class="stat-label">Puissance moy.</div>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{{ stats.account_age }}</span>
                    <div class="stat-label">Jours d'activité</div>
                </div>
            </div>
            
            <!-- Barre de progression du taux de victoire -->
            <div style="margin-top: 1rem;">
                <strong>Progression</strong>
                <div class="progress-bar">
                    <div class="progress-fill" style="width: {{ stats.win_rate }}%"></div>
                </div>
                <small style="color: #666;">{{ stats.win_rate }}% de victoires</small>
            </div>
        </div>

        <!-- Paramètres -->
        <div class="profile-card">
            <h3><i class="fas fa-cog"></i> Paramètres</h3>
            
            <!-- Bouton pour ouvrir le menu -->
            <button class="btn btn-primary" id="openSettingsBtn">
                <i class="fas fa-edit"></i> Modifier mes paramètres
            </button>
        </div>

        <!-- Équipe actuelle -->
        <div class="profile-card">
            <h3><i class="fas fa-users"></i> Équipe actuelle</h3>
            {% if current_team %}
                <h4>{{ current_team.name }}</h4>
                {% for character_instance in current_team.characterInstances %}
                    <div class="team-character">
                        <div>
                            <strong>{{ character_instance.template.name }}</strong>
                            <div class="match-power">
                                HP: {{ character_instance.template.hp }} | 
                                ATK: {{ character_instance.template.atk }} | 
                                DEF: {{ character_instance.template.def }}
                            </div>
                        </div>
                        <span class="character-role">{{ character_instance.template.role }}</span>
                    </div>
                {% endfor %}
                
                {% if current_team.characterInstances|length < 3 %}
                    <p style="color: #dc3545; margin-top: 1rem;">
                        <i class="fas fa-exclamation-triangle"></i>
                        Équipe incomplète ({{ current_team.characterInstances|length }}/3 personnages)
                    </p>
                {% else %}
                    <p style="color: #28a745; margin-top: 1rem;">
                        <i class="fas fa-check-circle"></i>
                        Équipe prête pour le combat !
                    </p>
                {% endif %}
            {% else %}
                <p style="color: #dc3545;">
                    <i class="fas fa-exclamation-triangle"></i>
                    Aucune équipe configurée
                </p>
                <a href="{{ path('app_homepage') }}" class="btn btn-primary" style="margin-top: 1rem;">
                    Créer une équipe
                </a>
            {% endif %}
        </div>

        <!-- Matchs récents -->
        <div class="profile-card" style="grid-column: 1 / -1;">
            <h3><i class="fas fa-history"></i> Matchs récents</h3>
            {% if recent_matches|length > 0 %}
                {% for match in recent_matches %}
                    <div class="match-item match-result {{ match.is_winner ? 'win' : 'loss' }}">
                        <div>
                            <div class="match-opponent">
                                vs {{ match.opponent }} ({{ match.opponent_team }})
                            </div>
                            <div class="match-power">
                                Puissance: {{ match.player_power }} vs {{ match.opponent_power }}
                            </div>
                        </div>
                        <div style="text-align: right;">
                            <div style="font-weight: bold; color: {{ match.is_winner ? '#28a745' : '#dc3545' }};">
                                {{ match.result }}
                            </div>
                            <div class="match-date">
                                {{ match.finished_at|date('d/m/Y H:i') }}
                            </div>
                        </div>
                    </div>
                {% endfor %}
                
                <div style="text-align: center; margin-top: 1rem;">
                    <a href="{{ path('app_homepage') }}#history" class="btn btn-outline-primary">
                        Voir tout l'historique
                    </a>
                </div>
            {% else %}
                <p style="color: #666; text-align: center; padding: 2rem;">
                    <i class="fas fa-info-circle"></i>
                    Aucun match joué pour le moment
                </p>
            {% endif %}
        </div>
    </div>
</div>

<!-- Modal des paramètres -->
<div id="settingsModal" class="settings-modal">
    <div class="settings-modal-content">
        <div class="settings-modal-header">
            <h3><i class="fas fa-cog"></i> Paramètres du profil</h3>
            <button class="settings-close-btn" id="closeSettingsBtn">
                <i class="fas fa-times"></i>
            </button>
        </div>
        
        <div class="settings-modal-body">
            <!-- Couleur du pseudo -->
            <div class="setting-group">
                <label for="usernameColor"><i class="fas fa-palette"></i> Couleur du pseudo</label>
                <div class="color-picker-container">
                    <input type="color" id="usernameColor" value="{{ app.user.usernameColor ?? '#8b3a3a' }}">
                    <span class="color-preview" style="color: {{ app.user.usernameColor ?? '#8b3a3a' }}">{{ app.user.username }}</span>
                </div>
            </div>

            <!-- Pseudo -->
            <div class="setting-group">
                <label for="username"><i class="fas fa-user"></i> Pseudo</label>
                <input type="text" id="username" value="{{ app.user.username }}" maxlength="20" minlength="3">
                <small>Entre 3 et 20 caractères</small>
            </div>

            <!-- Nom d'équipe -->
            {% if current_team %}
            <div class="setting-group">
                <label for="teamName"><i class="fas fa-users"></i> Nom d'équipe</label>
                <input type="text" id="teamName" value="{{ current_team.name }}" maxlength="30" minlength="3">
                <small>Entre 3 et 30 caractères</small>
            </div>
            {% endif %}

            <!-- Icône préférée -->
            <div class="setting-group">
                <label><i class="fas fa-icons"></i> Icône de profil</label>
                <div class="icon-selector">
                    {% set current_icon = app.user.preferredIcon ?? 'user' %}
                    {% set icons = [
                        {id: 'user', name: 'Utilisateur'}, 
                        {id: 'user-knight', name: 'Chevalier'}, 
                        {id: 'user-crown', name: 'Roi'}, 
                        {id: 'user-shield', name: 'Garde'}, 
                        {id: 'user-ninja', name: 'Ninja'}, 
                        {id: 'dragon', name: 'Dragon'}, 
                        {id: 'crown', name: 'Couronne'}, 
                        {id: 'sword', name: 'Épée'}, 
                        {id: 'shield', name: 'Bouclier'}, 
                        {id: 'helmet-battle', name: 'Casque'}, 
                        {id: 'fist-raised', name: 'Poing'}, 
                        {id: 'fire', name: 'Feu'}, 
                        {id: 'bolt', name: 'Éclair'}, 
                        {id: 'star', name: 'Étoile'}, 
                        {id: 'gem', name: 'Gemme'}
                    ] %}
                    
                    {% for icon in icons %}
                        <div class="icon-option {{ current_icon == icon.id ? 'selected' : '' }}" data-icon="{{ icon.id }}">
                            <i class="fas fa-{{ icon.id }}"></i>
                            <span>{{ icon.name }}</span>
                        </div>
                    {% endfor %}
                </div>
            </div>

            <!-- Notifications -->
            <div class="setting-group">
                <label><i class="fas fa-bell"></i> Notifications</label>
                <div class="toggle-container">
                    <input type="checkbox" id="notifications" {{ app.user.notificationsEnabled ? 'checked' : '' }}>
                    <label for="notifications" class="toggle-label">
                        <span class="toggle-text">Recevoir les notifications de matchs</span>
                    </label>
                </div>
            </div>
        </div>

        <div class="settings-modal-footer">
            <button class="btn btn-secondary" id="cancelSettingsBtn">Annuler</button>
            <button class="btn btn-primary" id="saveSettingsBtn">
                <i class="fas fa-save"></i> Sauvegarder
            </button>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('settingsModal');
    const openBtn = document.getElementById('openSettingsBtn');
    const closeBtn = document.getElementById('closeSettingsBtn');
    const cancelBtn = document.getElementById('cancelSettingsBtn');
    const saveBtn = document.getElementById('saveSettingsBtn');
    
    // Ouvrir le modal
    openBtn.addEventListener('click', function() {
        modal.classList.add('show');
        document.body.style.overflow = 'hidden';
    });
    
    // Fermer le modal
    function closeModal() {
        modal.classList.remove('show');
        document.body.style.overflow = '';
    }
    
    closeBtn.addEventListener('click', closeModal);
    cancelBtn.addEventListener('click', closeModal);
    
    // Fermer en cliquant à l'extérieur
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            closeModal();
        }
    });
    
    // Sélection d'icône
    document.querySelectorAll('.icon-option').forEach(option => {
        option.addEventListener('click', function() {
            document.querySelectorAll('.icon-option').forEach(opt => opt.classList.remove('selected'));
            this.classList.add('selected');
        });
    });
    
    // Aperçu couleur en temps réel
    document.getElementById('usernameColor').addEventListener('input', function() {
        document.querySelector('.color-preview').style.color = this.value;
    });
    
    // Sauvegarder les paramètres
    saveBtn.addEventListener('click', async function() {
        const btn = this;
        btn.disabled = true;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sauvegarde...';
        
        try {
            // Couleur du pseudo
            const color = document.getElementById('usernameColor').value;
            await fetch('{{ path('app_profile_update_username_color') }}', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({color: color})
            });
            
            // Pseudo
            const username = document.getElementById('username').value;
            const usernameResponse = await fetch('{{ path('app_profile_update_username') }}', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({username: username})
            });
            
            if (!usernameResponse.ok) {
                const error = await usernameResponse.json();
                alert(error.error || 'Erreur lors de la mise à jour du pseudo');
                return;
            }
            
            {% if current_team %}
            // Nom d'équipe
            const teamName = document.getElementById('teamName').value;
            await fetch('{{ path('app_profile_update_team_name') }}', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({teamName: teamName})
            });
            {% endif %}
            
            // Icône
            const selectedIcon = document.querySelector('.icon-option.selected').dataset.icon;
            await fetch('{{ path('app_profile_update_icon') }}', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({icon: selectedIcon})
            });
            
            // Notifications
            const notifications = document.getElementById('notifications').checked;
            await fetch('{{ path('app_profile_update_notifications') }}', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({enabled: notifications})
            });
            
            // Succès
            alert('Paramètres sauvegardés avec succès !');
            window.location.reload();
            
        } catch (error) {
            console.error('Erreur:', error);
            alert('Une erreur est survenue lors de la sauvegarde');
        } finally {
            btn.disabled = false;
            btn.innerHTML = '<i class="fas fa-save"></i> Sauvegarder';
        }
    });
});
</script>

{% endblock %}
